/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.profile.app;

import java.awt.Dimension;
import java.awt.Toolkit;
import static java.sql.DriverManager.getConnection;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Tomambid
 */
public class FrmMedicine extends javax.swing.JFrame {

    /**
     * Creates new form FrmMedicine
     */
    public FrmMedicine() {
        initComponents();
        this.setTitle("Medicine Avail");
        this.setCenterFrame();
        this.setResizable(false);
        ImageIcon img = new ImageIcon("src\\com\\profile\\img\\home.png");
        this.setIconImage(img.getImage());
        this.comboPatientFill();
        this.comboMedFill();
        this.comboContraceptiveFill();
        this.showTableMedAvail();
        
        
       
    }
        public void showTableMedAvail(){
        String[] columns = {"MA_ID","P_NAME","MED_NAME","CON_NAME"};
        String whereClause = "1=1";
        String[][] records = PG.executeDQL("Medicine_avail", columns, whereClause);
        UIC.Table.setModel(tblMedAvail, records, columns);
    }
    private void comboPatientFill(){
        try{
            PG.conn = getConnection(PG.url,PG.username,PG.password);
            PG.stmt = PG.conn.createStatement();
            String query = "SELECT * FROM Patient";
            ResultSet rs = PG.stmt.executeQuery(query);
            while(rs.next()){
                String name = rs.getString("p_fname");
                String lname = rs.getString("p_lname");
                cmbPatient.addItem(name+ " " + lname);
            }
        }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void comboMedFill(){
        try{
            PG.conn = getConnection(PG.url,PG.username,PG.password);
            PG.stmt = PG.conn.createStatement();
            String query = "SELECT * FROM Medicine";
            ResultSet rs = PG.stmt.executeQuery(query);
            while(rs.next()){
                String name = rs.getString("med_name");
                cmbMedicine.addItem(name);
            }
        }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void comboContraceptiveFill(){
        try{
            PG.conn = getConnection(PG.url,PG.username,PG.password);
            PG.stmt = PG.conn.createStatement();
            String query = "SELECT * FROM Contraceptive";
            ResultSet rs = PG.stmt.executeQuery(query);
            while(rs.next()){
                String name = rs.getString("con_name");
                cmbContraceptive.addItem(name);
            }
        }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void setCenterFrame(){
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
      
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbPatient = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedAvail = new javax.swing.JTable();
        jLabel70 = new javax.swing.JLabel();
        txtSearchMedicine = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbMedicine = new javax.swing.JComboBox<>();
        cmbContraceptive = new javax.swing.JComboBox<>();
        btnSubmitMed = new javax.swing.JButton();
        btnUpdateMed = new javax.swing.JButton();
        btnDeletePatient = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        cmbPatient.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        tblMedAvail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMedAvail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMedAvailMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMedAvail);

        jLabel70.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/profile/img/icons8-Search-35.png"))); // NOI18N

        txtSearchMedicine.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txtSearchMedicine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchMedicineKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel1.setText("Patient Name");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel2.setText("Medicine Avail");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel3.setText("Contraceptive Avail");

        cmbMedicine.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        cmbContraceptive.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        btnSubmitMed.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnSubmitMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/profile/img/icons8-Save-25.png"))); // NOI18N
        btnSubmitMed.setText("Submit");
        btnSubmitMed.setToolTipText("");
        btnSubmitMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitMedActionPerformed(evt);
            }
        });

        btnUpdateMed.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnUpdateMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/profile/img/icons8-Reset-25.png"))); // NOI18N
        btnUpdateMed.setText("Update");
        btnUpdateMed.setToolTipText("");
        btnUpdateMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMedActionPerformed(evt);
            }
        });

        btnDeletePatient.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnDeletePatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/profile/img/icons8-Delete-25.png"))); // NOI18N
        btnDeletePatient.setText("Delete");
        btnDeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(cmbContraceptive, 0, 364, Short.MAX_VALUE)
                            .addComponent(cmbMedicine, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbPatient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel70)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDeletePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateMed)
                                .addGap(18, 18, 18)
                                .addComponent(btnSubmitMed)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtSearchMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmitMed, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateMed, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeletePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(1, 1, 1)
                        .addComponent(cmbPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbContraceptive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchMedicineKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchMedicineKeyReleased
         String searchMed = txtSearchMedicine.getText();
        if(txtSearchMedicine.equals("")){
            this.showTableMedAvail();
        }else{
            try{
                PG.conn = getConnection(PG.url,PG.username,PG.password);
                PG.stmt = PG.conn.createStatement();
                String whereClause = "p_name LIKE '%"+searchMed+"%' OR "
                        + "med_name LIKE '%"+searchMed+"%' OR con_name LIKE '%"+searchMed+"%'";
                String query = "SELECT ma_id, P_NAME, MED_NAME, CON_NAME FROM medicine_avail WHERE "+whereClause;
                ResultSet rs = PG.stmt.executeQuery(query);
                
                tblMedAvail.setModel(DbUtils.resultSetToTableModel(rs));
                PG.conn.close();
            }catch(Exception e){
                System.out.println("Search Error:"+e.getMessage());
            }

        }
    }//GEN-LAST:event_txtSearchMedicineKeyReleased

    private void btnSubmitMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitMedActionPerformed
        try{
            String patient = cmbPatient.getSelectedItem().toString();
            String med_avail = cmbMedicine.getSelectedItem().toString();
            String con_avail = cmbContraceptive.getSelectedItem().toString();

            int response = JOptionPane.showConfirmDialog(null, "Did this patient avail a medicine/contraceptive?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (response == 0) {
                Object[] values = {patient,med_avail,con_avail};
                String query = "INSERT INTO medicine_avail (p_name,med_name,con_name) VALUES (?,?,?)";
                if (PG.executeDML(query, values)) {
                  JOptionPane.showMessageDialog(null, "Patient medicine avail successfully added");
                    this.showTableMedAvail();
                    
                } else {
                    javax.swing.JOptionPane.showMessageDialog(null, "An error occured while creating new task.");
                }
                 Date currentDate = GregorianCalendar.getInstance().getTime();
                    DateFormat df = DateFormat.getDateInstance();
                    String dateString = df.format(currentDate);

                    Date d = new Date();
                    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                    String timeString = sdf.format(d);
                    String value0 = timeString;
                    String value1 = dateString;
                    int value = FrmLogin.pid;
                   
                    String status = "Inserted the field "+patient+" ,"+med_avail+" ,"+con_avail+" Into Medicine Avail";
                    Object[] values1 = {value1,value0,status,value};
                    String query1 = "INSERT INTO Audit(dateaudit,timeaudit,status,u_id) VALUES (?,?,?,?)";
                    PG.executeDML(query1, values1); 
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnSubmitMedActionPerformed

    private void btnUpdateMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMedActionPerformed
        int id = UIC.Table.getSelectedRow(tblMedAvail);
        String patient = cmbPatient.getSelectedItem().toString();
        String med_avail = cmbMedicine.getSelectedItem().toString();
        String con_avail = cmbContraceptive.getSelectedItem().toString();
        int reply = javax.swing.JOptionPane.showConfirmDialog(null, "Do you wish to update this account?", "UPDATE", JOptionPane.YES_NO_OPTION);
            if(reply == 0){
                Object[] values = {patient,med_avail,con_avail,id};
                String query = "UPDATE Medicine_avail SET p_name=?, med_name=?, con_name=? WHERE ma_id=?";
                if(PG.executeDML(query, values)){
                    JOptionPane.showMessageDialog(null, "Medicine Avail Successfully Updated!");
                    this.showTableMedAvail();
                }else{
                    JOptionPane.showMessageDialog(null, "Medicine Avail Update Error!");
                }
                 Date currentDate = GregorianCalendar.getInstance().getTime();
                    DateFormat df = DateFormat.getDateInstance();
                    String dateString = df.format(currentDate);

                    Date d = new Date();
                    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                    String timeString = sdf.format(d);
                    String value0 = timeString;
                    String value1 = dateString;
                    int value = FrmLogin.pid;
                    String status = "Updated the field "+patient+","+med_avail+","+con_avail+" Into Patient";
                    Object[] values1 = {value1,value0,status,value};
                    String query1 = "INSERT INTO Audit(dateaudit,timeaudit,status,u_id) VALUES (?,?,?,?)";
                    PG.executeDML(query1, values1);
            }else{
                JOptionPane.showMessageDialog(null, "Update cancelled!");
                this.showTableMedAvail();
            }
                
            
        
    }//GEN-LAST:event_btnUpdateMedActionPerformed

    private void tblMedAvailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMedAvailMouseClicked
        int lmedavail = UIC.Table.getSelectedRow(tblMedAvail);
        System.out.println("Clicked: " + lmedavail);
        String[] columns = {"ma_id","p_name", "med_name","con_name"};
        String whereClause = "ma_id=" + lmedavail;
        String[][] records = PG.executeDQL("medicine_avail", columns, whereClause);
       
        String patient = records[0][1];
        if (patient.equals(records[0][1])) {
             cmbPatient.setSelectedItem(records[0][1]);
        } else {
             cmbPatient.setSelectedItem(records[0][1]);
        }
         String med_avail = records[0][2];
         if(med_avail.equals(records[0][2])){
             cmbMedicine.setSelectedItem(records[0][2]);
         }else{
             cmbMedicine.setSelectedItem(records[0][2]);
         }
        String con_avail = records[0][3];
        if(con_avail.equals(records[0][3])){
            cmbContraceptive.setSelectedItem(records[0][3]);
        }else{
            cmbContraceptive.setSelectedItem(records[0][3]);
        }
    }//GEN-LAST:event_tblMedAvailMouseClicked

    private void btnDeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePatientActionPerformed
        int id = UIC.Table.getSelectedRow(tblMedAvail);
        Object[] values = {id};
        int reply = javax.swing.JOptionPane.showConfirmDialog(null, "Do you wish to delete this Medicine Avail Record?", "Delete", JOptionPane.YES_NO_OPTION);
        if(reply == 0){
            String query = "DELETE FROM Medicine_Avail WHERE ma_id=?";
            if (PG.executeDML(query, values)) {
                javax.swing.JOptionPane.showMessageDialog(null, "Medicine Avail Record Removed!");

                
                this.showTableMedAvail();
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "An error occured while removing Patient Record");
            }
            Date currentDate = GregorianCalendar.getInstance().getTime();
            DateFormat df = DateFormat.getDateInstance();
            String dateString = df.format(currentDate);

            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            String timeString = sdf.format(d);
            String value0 = timeString;
            String value1 = dateString;
            int value = FrmLogin.pid;
            String status = "Deleted the field id "+id+" from Medicine_Avail";
            Object[] values1 = {value1,value0,status,value};
            String query1 = "INSERT INTO Audit(dateaudit,timeaudit,status,u_id) VALUES (?,?,?,?)";
            PG.executeDML(query1, values1);
        }
    }//GEN-LAST:event_btnDeletePatientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletePatient;
    private javax.swing.JButton btnSubmitMed;
    private javax.swing.JButton btnUpdateMed;
    private javax.swing.JComboBox<String> cmbContraceptive;
    private javax.swing.JComboBox<String> cmbMedicine;
    private javax.swing.JComboBox<String> cmbPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMedAvail;
    private javax.swing.JTextField txtSearchMedicine;
    // End of variables declaration//GEN-END:variables
}
